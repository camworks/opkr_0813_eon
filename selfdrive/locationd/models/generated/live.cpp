#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.8                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4391333410375007465) {
   out_4391333410375007465[0] = 0;
   out_4391333410375007465[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4391333410375007465[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4391333410375007465[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4391333410375007465[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4391333410375007465[5] = -sin(in_vec[1]);
   out_4391333410375007465[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4391333410375007465[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4391333410375007465[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4391333410375007465[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4391333410375007465[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4391333410375007465[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4391333410375007465[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4391333410375007465[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4391333410375007465[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4391333410375007465[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4391333410375007465[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4391333410375007465[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3940639469994771400) {
   out_3940639469994771400[0] = delta_x[0] + nom_x[0];
   out_3940639469994771400[1] = delta_x[1] + nom_x[1];
   out_3940639469994771400[2] = delta_x[2] + nom_x[2];
   out_3940639469994771400[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3940639469994771400[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3940639469994771400[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3940639469994771400[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3940639469994771400[7] = delta_x[6] + nom_x[7];
   out_3940639469994771400[8] = delta_x[7] + nom_x[8];
   out_3940639469994771400[9] = delta_x[8] + nom_x[9];
   out_3940639469994771400[10] = delta_x[9] + nom_x[10];
   out_3940639469994771400[11] = delta_x[10] + nom_x[11];
   out_3940639469994771400[12] = delta_x[11] + nom_x[12];
   out_3940639469994771400[13] = delta_x[12] + nom_x[13];
   out_3940639469994771400[14] = delta_x[13] + nom_x[14];
   out_3940639469994771400[15] = delta_x[14] + nom_x[15];
   out_3940639469994771400[16] = delta_x[15] + nom_x[16];
   out_3940639469994771400[17] = delta_x[16] + nom_x[17];
   out_3940639469994771400[18] = delta_x[17] + nom_x[18];
   out_3940639469994771400[19] = delta_x[18] + nom_x[19];
   out_3940639469994771400[20] = delta_x[19] + nom_x[20];
   out_3940639469994771400[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1694960292761865224) {
   out_1694960292761865224[0] = -nom_x[0] + true_x[0];
   out_1694960292761865224[1] = -nom_x[1] + true_x[1];
   out_1694960292761865224[2] = -nom_x[2] + true_x[2];
   out_1694960292761865224[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1694960292761865224[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1694960292761865224[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1694960292761865224[6] = -nom_x[7] + true_x[7];
   out_1694960292761865224[7] = -nom_x[8] + true_x[8];
   out_1694960292761865224[8] = -nom_x[9] + true_x[9];
   out_1694960292761865224[9] = -nom_x[10] + true_x[10];
   out_1694960292761865224[10] = -nom_x[11] + true_x[11];
   out_1694960292761865224[11] = -nom_x[12] + true_x[12];
   out_1694960292761865224[12] = -nom_x[13] + true_x[13];
   out_1694960292761865224[13] = -nom_x[14] + true_x[14];
   out_1694960292761865224[14] = -nom_x[15] + true_x[15];
   out_1694960292761865224[15] = -nom_x[16] + true_x[16];
   out_1694960292761865224[16] = -nom_x[17] + true_x[17];
   out_1694960292761865224[17] = -nom_x[18] + true_x[18];
   out_1694960292761865224[18] = -nom_x[19] + true_x[19];
   out_1694960292761865224[19] = -nom_x[20] + true_x[20];
   out_1694960292761865224[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_42904283348084181) {
   out_42904283348084181[0] = 1.0;
   out_42904283348084181[1] = 0.0;
   out_42904283348084181[2] = 0.0;
   out_42904283348084181[3] = 0.0;
   out_42904283348084181[4] = 0.0;
   out_42904283348084181[5] = 0.0;
   out_42904283348084181[6] = 0.0;
   out_42904283348084181[7] = 0.0;
   out_42904283348084181[8] = 0.0;
   out_42904283348084181[9] = 0.0;
   out_42904283348084181[10] = 0.0;
   out_42904283348084181[11] = 0.0;
   out_42904283348084181[12] = 0.0;
   out_42904283348084181[13] = 0.0;
   out_42904283348084181[14] = 0.0;
   out_42904283348084181[15] = 0.0;
   out_42904283348084181[16] = 0.0;
   out_42904283348084181[17] = 0.0;
   out_42904283348084181[18] = 0.0;
   out_42904283348084181[19] = 0.0;
   out_42904283348084181[20] = 0.0;
   out_42904283348084181[21] = 0.0;
   out_42904283348084181[22] = 1.0;
   out_42904283348084181[23] = 0.0;
   out_42904283348084181[24] = 0.0;
   out_42904283348084181[25] = 0.0;
   out_42904283348084181[26] = 0.0;
   out_42904283348084181[27] = 0.0;
   out_42904283348084181[28] = 0.0;
   out_42904283348084181[29] = 0.0;
   out_42904283348084181[30] = 0.0;
   out_42904283348084181[31] = 0.0;
   out_42904283348084181[32] = 0.0;
   out_42904283348084181[33] = 0.0;
   out_42904283348084181[34] = 0.0;
   out_42904283348084181[35] = 0.0;
   out_42904283348084181[36] = 0.0;
   out_42904283348084181[37] = 0.0;
   out_42904283348084181[38] = 0.0;
   out_42904283348084181[39] = 0.0;
   out_42904283348084181[40] = 0.0;
   out_42904283348084181[41] = 0.0;
   out_42904283348084181[42] = 0.0;
   out_42904283348084181[43] = 0.0;
   out_42904283348084181[44] = 1.0;
   out_42904283348084181[45] = 0.0;
   out_42904283348084181[46] = 0.0;
   out_42904283348084181[47] = 0.0;
   out_42904283348084181[48] = 0.0;
   out_42904283348084181[49] = 0.0;
   out_42904283348084181[50] = 0.0;
   out_42904283348084181[51] = 0.0;
   out_42904283348084181[52] = 0.0;
   out_42904283348084181[53] = 0.0;
   out_42904283348084181[54] = 0.0;
   out_42904283348084181[55] = 0.0;
   out_42904283348084181[56] = 0.0;
   out_42904283348084181[57] = 0.0;
   out_42904283348084181[58] = 0.0;
   out_42904283348084181[59] = 0.0;
   out_42904283348084181[60] = 0.0;
   out_42904283348084181[61] = 0.0;
   out_42904283348084181[62] = 0.0;
   out_42904283348084181[63] = 0.0;
   out_42904283348084181[64] = 0.0;
   out_42904283348084181[65] = 0.0;
   out_42904283348084181[66] = -0.5*state[4];
   out_42904283348084181[67] = -0.5*state[5];
   out_42904283348084181[68] = -0.5*state[6];
   out_42904283348084181[69] = 0.0;
   out_42904283348084181[70] = 0.0;
   out_42904283348084181[71] = 0.0;
   out_42904283348084181[72] = 0.0;
   out_42904283348084181[73] = 0.0;
   out_42904283348084181[74] = 0.0;
   out_42904283348084181[75] = 0.0;
   out_42904283348084181[76] = 0.0;
   out_42904283348084181[77] = 0.0;
   out_42904283348084181[78] = 0.0;
   out_42904283348084181[79] = 0.0;
   out_42904283348084181[80] = 0.0;
   out_42904283348084181[81] = 0.0;
   out_42904283348084181[82] = 0.0;
   out_42904283348084181[83] = 0.0;
   out_42904283348084181[84] = 0.0;
   out_42904283348084181[85] = 0.0;
   out_42904283348084181[86] = 0.0;
   out_42904283348084181[87] = 0.5*state[3];
   out_42904283348084181[88] = 0.5*state[6];
   out_42904283348084181[89] = -0.5*state[5];
   out_42904283348084181[90] = 0.0;
   out_42904283348084181[91] = 0.0;
   out_42904283348084181[92] = 0.0;
   out_42904283348084181[93] = 0.0;
   out_42904283348084181[94] = 0.0;
   out_42904283348084181[95] = 0.0;
   out_42904283348084181[96] = 0.0;
   out_42904283348084181[97] = 0.0;
   out_42904283348084181[98] = 0.0;
   out_42904283348084181[99] = 0.0;
   out_42904283348084181[100] = 0.0;
   out_42904283348084181[101] = 0.0;
   out_42904283348084181[102] = 0.0;
   out_42904283348084181[103] = 0.0;
   out_42904283348084181[104] = 0.0;
   out_42904283348084181[105] = 0.0;
   out_42904283348084181[106] = 0.0;
   out_42904283348084181[107] = 0.0;
   out_42904283348084181[108] = -0.5*state[6];
   out_42904283348084181[109] = 0.5*state[3];
   out_42904283348084181[110] = 0.5*state[4];
   out_42904283348084181[111] = 0.0;
   out_42904283348084181[112] = 0.0;
   out_42904283348084181[113] = 0.0;
   out_42904283348084181[114] = 0.0;
   out_42904283348084181[115] = 0.0;
   out_42904283348084181[116] = 0.0;
   out_42904283348084181[117] = 0.0;
   out_42904283348084181[118] = 0.0;
   out_42904283348084181[119] = 0.0;
   out_42904283348084181[120] = 0.0;
   out_42904283348084181[121] = 0.0;
   out_42904283348084181[122] = 0.0;
   out_42904283348084181[123] = 0.0;
   out_42904283348084181[124] = 0.0;
   out_42904283348084181[125] = 0.0;
   out_42904283348084181[126] = 0.0;
   out_42904283348084181[127] = 0.0;
   out_42904283348084181[128] = 0.0;
   out_42904283348084181[129] = 0.5*state[5];
   out_42904283348084181[130] = -0.5*state[4];
   out_42904283348084181[131] = 0.5*state[3];
   out_42904283348084181[132] = 0.0;
   out_42904283348084181[133] = 0.0;
   out_42904283348084181[134] = 0.0;
   out_42904283348084181[135] = 0.0;
   out_42904283348084181[136] = 0.0;
   out_42904283348084181[137] = 0.0;
   out_42904283348084181[138] = 0.0;
   out_42904283348084181[139] = 0.0;
   out_42904283348084181[140] = 0.0;
   out_42904283348084181[141] = 0.0;
   out_42904283348084181[142] = 0.0;
   out_42904283348084181[143] = 0.0;
   out_42904283348084181[144] = 0.0;
   out_42904283348084181[145] = 0.0;
   out_42904283348084181[146] = 0.0;
   out_42904283348084181[147] = 0.0;
   out_42904283348084181[148] = 0.0;
   out_42904283348084181[149] = 0.0;
   out_42904283348084181[150] = 0.0;
   out_42904283348084181[151] = 0.0;
   out_42904283348084181[152] = 0.0;
   out_42904283348084181[153] = 1.0;
   out_42904283348084181[154] = 0.0;
   out_42904283348084181[155] = 0.0;
   out_42904283348084181[156] = 0.0;
   out_42904283348084181[157] = 0.0;
   out_42904283348084181[158] = 0.0;
   out_42904283348084181[159] = 0.0;
   out_42904283348084181[160] = 0.0;
   out_42904283348084181[161] = 0.0;
   out_42904283348084181[162] = 0.0;
   out_42904283348084181[163] = 0.0;
   out_42904283348084181[164] = 0.0;
   out_42904283348084181[165] = 0.0;
   out_42904283348084181[166] = 0.0;
   out_42904283348084181[167] = 0.0;
   out_42904283348084181[168] = 0.0;
   out_42904283348084181[169] = 0.0;
   out_42904283348084181[170] = 0.0;
   out_42904283348084181[171] = 0.0;
   out_42904283348084181[172] = 0.0;
   out_42904283348084181[173] = 0.0;
   out_42904283348084181[174] = 0.0;
   out_42904283348084181[175] = 1.0;
   out_42904283348084181[176] = 0.0;
   out_42904283348084181[177] = 0.0;
   out_42904283348084181[178] = 0.0;
   out_42904283348084181[179] = 0.0;
   out_42904283348084181[180] = 0.0;
   out_42904283348084181[181] = 0.0;
   out_42904283348084181[182] = 0.0;
   out_42904283348084181[183] = 0.0;
   out_42904283348084181[184] = 0.0;
   out_42904283348084181[185] = 0.0;
   out_42904283348084181[186] = 0.0;
   out_42904283348084181[187] = 0.0;
   out_42904283348084181[188] = 0.0;
   out_42904283348084181[189] = 0.0;
   out_42904283348084181[190] = 0.0;
   out_42904283348084181[191] = 0.0;
   out_42904283348084181[192] = 0.0;
   out_42904283348084181[193] = 0.0;
   out_42904283348084181[194] = 0.0;
   out_42904283348084181[195] = 0.0;
   out_42904283348084181[196] = 0.0;
   out_42904283348084181[197] = 1.0;
   out_42904283348084181[198] = 0.0;
   out_42904283348084181[199] = 0.0;
   out_42904283348084181[200] = 0.0;
   out_42904283348084181[201] = 0.0;
   out_42904283348084181[202] = 0.0;
   out_42904283348084181[203] = 0.0;
   out_42904283348084181[204] = 0.0;
   out_42904283348084181[205] = 0.0;
   out_42904283348084181[206] = 0.0;
   out_42904283348084181[207] = 0.0;
   out_42904283348084181[208] = 0.0;
   out_42904283348084181[209] = 0.0;
   out_42904283348084181[210] = 0.0;
   out_42904283348084181[211] = 0.0;
   out_42904283348084181[212] = 0.0;
   out_42904283348084181[213] = 0.0;
   out_42904283348084181[214] = 0.0;
   out_42904283348084181[215] = 0.0;
   out_42904283348084181[216] = 0.0;
   out_42904283348084181[217] = 0.0;
   out_42904283348084181[218] = 0.0;
   out_42904283348084181[219] = 1.0;
   out_42904283348084181[220] = 0.0;
   out_42904283348084181[221] = 0.0;
   out_42904283348084181[222] = 0.0;
   out_42904283348084181[223] = 0.0;
   out_42904283348084181[224] = 0.0;
   out_42904283348084181[225] = 0.0;
   out_42904283348084181[226] = 0.0;
   out_42904283348084181[227] = 0.0;
   out_42904283348084181[228] = 0.0;
   out_42904283348084181[229] = 0.0;
   out_42904283348084181[230] = 0.0;
   out_42904283348084181[231] = 0.0;
   out_42904283348084181[232] = 0.0;
   out_42904283348084181[233] = 0.0;
   out_42904283348084181[234] = 0.0;
   out_42904283348084181[235] = 0.0;
   out_42904283348084181[236] = 0.0;
   out_42904283348084181[237] = 0.0;
   out_42904283348084181[238] = 0.0;
   out_42904283348084181[239] = 0.0;
   out_42904283348084181[240] = 0.0;
   out_42904283348084181[241] = 1.0;
   out_42904283348084181[242] = 0.0;
   out_42904283348084181[243] = 0.0;
   out_42904283348084181[244] = 0.0;
   out_42904283348084181[245] = 0.0;
   out_42904283348084181[246] = 0.0;
   out_42904283348084181[247] = 0.0;
   out_42904283348084181[248] = 0.0;
   out_42904283348084181[249] = 0.0;
   out_42904283348084181[250] = 0.0;
   out_42904283348084181[251] = 0.0;
   out_42904283348084181[252] = 0.0;
   out_42904283348084181[253] = 0.0;
   out_42904283348084181[254] = 0.0;
   out_42904283348084181[255] = 0.0;
   out_42904283348084181[256] = 0.0;
   out_42904283348084181[257] = 0.0;
   out_42904283348084181[258] = 0.0;
   out_42904283348084181[259] = 0.0;
   out_42904283348084181[260] = 0.0;
   out_42904283348084181[261] = 0.0;
   out_42904283348084181[262] = 0.0;
   out_42904283348084181[263] = 1.0;
   out_42904283348084181[264] = 0.0;
   out_42904283348084181[265] = 0.0;
   out_42904283348084181[266] = 0.0;
   out_42904283348084181[267] = 0.0;
   out_42904283348084181[268] = 0.0;
   out_42904283348084181[269] = 0.0;
   out_42904283348084181[270] = 0.0;
   out_42904283348084181[271] = 0.0;
   out_42904283348084181[272] = 0.0;
   out_42904283348084181[273] = 0.0;
   out_42904283348084181[274] = 0.0;
   out_42904283348084181[275] = 0.0;
   out_42904283348084181[276] = 0.0;
   out_42904283348084181[277] = 0.0;
   out_42904283348084181[278] = 0.0;
   out_42904283348084181[279] = 0.0;
   out_42904283348084181[280] = 0.0;
   out_42904283348084181[281] = 0.0;
   out_42904283348084181[282] = 0.0;
   out_42904283348084181[283] = 0.0;
   out_42904283348084181[284] = 0.0;
   out_42904283348084181[285] = 1.0;
   out_42904283348084181[286] = 0.0;
   out_42904283348084181[287] = 0.0;
   out_42904283348084181[288] = 0.0;
   out_42904283348084181[289] = 0.0;
   out_42904283348084181[290] = 0.0;
   out_42904283348084181[291] = 0.0;
   out_42904283348084181[292] = 0.0;
   out_42904283348084181[293] = 0.0;
   out_42904283348084181[294] = 0.0;
   out_42904283348084181[295] = 0.0;
   out_42904283348084181[296] = 0.0;
   out_42904283348084181[297] = 0.0;
   out_42904283348084181[298] = 0.0;
   out_42904283348084181[299] = 0.0;
   out_42904283348084181[300] = 0.0;
   out_42904283348084181[301] = 0.0;
   out_42904283348084181[302] = 0.0;
   out_42904283348084181[303] = 0.0;
   out_42904283348084181[304] = 0.0;
   out_42904283348084181[305] = 0.0;
   out_42904283348084181[306] = 0.0;
   out_42904283348084181[307] = 1.0;
   out_42904283348084181[308] = 0.0;
   out_42904283348084181[309] = 0.0;
   out_42904283348084181[310] = 0.0;
   out_42904283348084181[311] = 0.0;
   out_42904283348084181[312] = 0.0;
   out_42904283348084181[313] = 0.0;
   out_42904283348084181[314] = 0.0;
   out_42904283348084181[315] = 0.0;
   out_42904283348084181[316] = 0.0;
   out_42904283348084181[317] = 0.0;
   out_42904283348084181[318] = 0.0;
   out_42904283348084181[319] = 0.0;
   out_42904283348084181[320] = 0.0;
   out_42904283348084181[321] = 0.0;
   out_42904283348084181[322] = 0.0;
   out_42904283348084181[323] = 0.0;
   out_42904283348084181[324] = 0.0;
   out_42904283348084181[325] = 0.0;
   out_42904283348084181[326] = 0.0;
   out_42904283348084181[327] = 0.0;
   out_42904283348084181[328] = 0.0;
   out_42904283348084181[329] = 1.0;
   out_42904283348084181[330] = 0.0;
   out_42904283348084181[331] = 0.0;
   out_42904283348084181[332] = 0.0;
   out_42904283348084181[333] = 0.0;
   out_42904283348084181[334] = 0.0;
   out_42904283348084181[335] = 0.0;
   out_42904283348084181[336] = 0.0;
   out_42904283348084181[337] = 0.0;
   out_42904283348084181[338] = 0.0;
   out_42904283348084181[339] = 0.0;
   out_42904283348084181[340] = 0.0;
   out_42904283348084181[341] = 0.0;
   out_42904283348084181[342] = 0.0;
   out_42904283348084181[343] = 0.0;
   out_42904283348084181[344] = 0.0;
   out_42904283348084181[345] = 0.0;
   out_42904283348084181[346] = 0.0;
   out_42904283348084181[347] = 0.0;
   out_42904283348084181[348] = 0.0;
   out_42904283348084181[349] = 0.0;
   out_42904283348084181[350] = 0.0;
   out_42904283348084181[351] = 1.0;
   out_42904283348084181[352] = 0.0;
   out_42904283348084181[353] = 0.0;
   out_42904283348084181[354] = 0.0;
   out_42904283348084181[355] = 0.0;
   out_42904283348084181[356] = 0.0;
   out_42904283348084181[357] = 0.0;
   out_42904283348084181[358] = 0.0;
   out_42904283348084181[359] = 0.0;
   out_42904283348084181[360] = 0.0;
   out_42904283348084181[361] = 0.0;
   out_42904283348084181[362] = 0.0;
   out_42904283348084181[363] = 0.0;
   out_42904283348084181[364] = 0.0;
   out_42904283348084181[365] = 0.0;
   out_42904283348084181[366] = 0.0;
   out_42904283348084181[367] = 0.0;
   out_42904283348084181[368] = 0.0;
   out_42904283348084181[369] = 0.0;
   out_42904283348084181[370] = 0.0;
   out_42904283348084181[371] = 0.0;
   out_42904283348084181[372] = 0.0;
   out_42904283348084181[373] = 1.0;
   out_42904283348084181[374] = 0.0;
   out_42904283348084181[375] = 0.0;
   out_42904283348084181[376] = 0.0;
   out_42904283348084181[377] = 0.0;
   out_42904283348084181[378] = 0.0;
   out_42904283348084181[379] = 0.0;
   out_42904283348084181[380] = 0.0;
   out_42904283348084181[381] = 0.0;
   out_42904283348084181[382] = 0.0;
   out_42904283348084181[383] = 0.0;
   out_42904283348084181[384] = 0.0;
   out_42904283348084181[385] = 0.0;
   out_42904283348084181[386] = 0.0;
   out_42904283348084181[387] = 0.0;
   out_42904283348084181[388] = 0.0;
   out_42904283348084181[389] = 0.0;
   out_42904283348084181[390] = 0.0;
   out_42904283348084181[391] = 0.0;
   out_42904283348084181[392] = 0.0;
   out_42904283348084181[393] = 0.0;
   out_42904283348084181[394] = 0.0;
   out_42904283348084181[395] = 1.0;
   out_42904283348084181[396] = 0.0;
   out_42904283348084181[397] = 0.0;
   out_42904283348084181[398] = 0.0;
   out_42904283348084181[399] = 0.0;
   out_42904283348084181[400] = 0.0;
   out_42904283348084181[401] = 0.0;
   out_42904283348084181[402] = 0.0;
   out_42904283348084181[403] = 0.0;
   out_42904283348084181[404] = 0.0;
   out_42904283348084181[405] = 0.0;
   out_42904283348084181[406] = 0.0;
   out_42904283348084181[407] = 0.0;
   out_42904283348084181[408] = 0.0;
   out_42904283348084181[409] = 0.0;
   out_42904283348084181[410] = 0.0;
   out_42904283348084181[411] = 0.0;
   out_42904283348084181[412] = 0.0;
   out_42904283348084181[413] = 0.0;
   out_42904283348084181[414] = 0.0;
   out_42904283348084181[415] = 0.0;
   out_42904283348084181[416] = 0.0;
   out_42904283348084181[417] = 1.0;
   out_42904283348084181[418] = 0.0;
   out_42904283348084181[419] = 0.0;
   out_42904283348084181[420] = 0.0;
   out_42904283348084181[421] = 0.0;
   out_42904283348084181[422] = 0.0;
   out_42904283348084181[423] = 0.0;
   out_42904283348084181[424] = 0.0;
   out_42904283348084181[425] = 0.0;
   out_42904283348084181[426] = 0.0;
   out_42904283348084181[427] = 0.0;
   out_42904283348084181[428] = 0.0;
   out_42904283348084181[429] = 0.0;
   out_42904283348084181[430] = 0.0;
   out_42904283348084181[431] = 0.0;
   out_42904283348084181[432] = 0.0;
   out_42904283348084181[433] = 0.0;
   out_42904283348084181[434] = 0.0;
   out_42904283348084181[435] = 0.0;
   out_42904283348084181[436] = 0.0;
   out_42904283348084181[437] = 0.0;
   out_42904283348084181[438] = 0.0;
   out_42904283348084181[439] = 1.0;
   out_42904283348084181[440] = 0.0;
   out_42904283348084181[441] = 0.0;
   out_42904283348084181[442] = 0.0;
   out_42904283348084181[443] = 0.0;
   out_42904283348084181[444] = 0.0;
   out_42904283348084181[445] = 0.0;
   out_42904283348084181[446] = 0.0;
   out_42904283348084181[447] = 0.0;
   out_42904283348084181[448] = 0.0;
   out_42904283348084181[449] = 0.0;
   out_42904283348084181[450] = 0.0;
   out_42904283348084181[451] = 0.0;
   out_42904283348084181[452] = 0.0;
   out_42904283348084181[453] = 0.0;
   out_42904283348084181[454] = 0.0;
   out_42904283348084181[455] = 0.0;
   out_42904283348084181[456] = 0.0;
   out_42904283348084181[457] = 0.0;
   out_42904283348084181[458] = 0.0;
   out_42904283348084181[459] = 0.0;
   out_42904283348084181[460] = 0.0;
   out_42904283348084181[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7874582835499815417) {
   out_7874582835499815417[0] = dt*state[7] + state[0];
   out_7874582835499815417[1] = dt*state[8] + state[1];
   out_7874582835499815417[2] = dt*state[9] + state[2];
   out_7874582835499815417[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7874582835499815417[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7874582835499815417[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7874582835499815417[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7874582835499815417[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7874582835499815417[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7874582835499815417[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7874582835499815417[10] = state[10];
   out_7874582835499815417[11] = state[11];
   out_7874582835499815417[12] = state[12];
   out_7874582835499815417[13] = state[13];
   out_7874582835499815417[14] = state[14];
   out_7874582835499815417[15] = state[15];
   out_7874582835499815417[16] = state[16];
   out_7874582835499815417[17] = state[17];
   out_7874582835499815417[18] = state[18];
   out_7874582835499815417[19] = state[19];
   out_7874582835499815417[20] = state[20];
   out_7874582835499815417[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3722726511211153758) {
   out_3722726511211153758[0] = 1;
   out_3722726511211153758[1] = 0;
   out_3722726511211153758[2] = 0;
   out_3722726511211153758[3] = 0;
   out_3722726511211153758[4] = 0;
   out_3722726511211153758[5] = 0;
   out_3722726511211153758[6] = dt;
   out_3722726511211153758[7] = 0;
   out_3722726511211153758[8] = 0;
   out_3722726511211153758[9] = 0;
   out_3722726511211153758[10] = 0;
   out_3722726511211153758[11] = 0;
   out_3722726511211153758[12] = 0;
   out_3722726511211153758[13] = 0;
   out_3722726511211153758[14] = 0;
   out_3722726511211153758[15] = 0;
   out_3722726511211153758[16] = 0;
   out_3722726511211153758[17] = 0;
   out_3722726511211153758[18] = 0;
   out_3722726511211153758[19] = 0;
   out_3722726511211153758[20] = 0;
   out_3722726511211153758[21] = 0;
   out_3722726511211153758[22] = 1;
   out_3722726511211153758[23] = 0;
   out_3722726511211153758[24] = 0;
   out_3722726511211153758[25] = 0;
   out_3722726511211153758[26] = 0;
   out_3722726511211153758[27] = 0;
   out_3722726511211153758[28] = dt;
   out_3722726511211153758[29] = 0;
   out_3722726511211153758[30] = 0;
   out_3722726511211153758[31] = 0;
   out_3722726511211153758[32] = 0;
   out_3722726511211153758[33] = 0;
   out_3722726511211153758[34] = 0;
   out_3722726511211153758[35] = 0;
   out_3722726511211153758[36] = 0;
   out_3722726511211153758[37] = 0;
   out_3722726511211153758[38] = 0;
   out_3722726511211153758[39] = 0;
   out_3722726511211153758[40] = 0;
   out_3722726511211153758[41] = 0;
   out_3722726511211153758[42] = 0;
   out_3722726511211153758[43] = 0;
   out_3722726511211153758[44] = 1;
   out_3722726511211153758[45] = 0;
   out_3722726511211153758[46] = 0;
   out_3722726511211153758[47] = 0;
   out_3722726511211153758[48] = 0;
   out_3722726511211153758[49] = 0;
   out_3722726511211153758[50] = dt;
   out_3722726511211153758[51] = 0;
   out_3722726511211153758[52] = 0;
   out_3722726511211153758[53] = 0;
   out_3722726511211153758[54] = 0;
   out_3722726511211153758[55] = 0;
   out_3722726511211153758[56] = 0;
   out_3722726511211153758[57] = 0;
   out_3722726511211153758[58] = 0;
   out_3722726511211153758[59] = 0;
   out_3722726511211153758[60] = 0;
   out_3722726511211153758[61] = 0;
   out_3722726511211153758[62] = 0;
   out_3722726511211153758[63] = 0;
   out_3722726511211153758[64] = 0;
   out_3722726511211153758[65] = 0;
   out_3722726511211153758[66] = 1;
   out_3722726511211153758[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3722726511211153758[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3722726511211153758[69] = 0;
   out_3722726511211153758[70] = 0;
   out_3722726511211153758[71] = 0;
   out_3722726511211153758[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3722726511211153758[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3722726511211153758[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3722726511211153758[75] = 0;
   out_3722726511211153758[76] = 0;
   out_3722726511211153758[77] = 0;
   out_3722726511211153758[78] = 0;
   out_3722726511211153758[79] = 0;
   out_3722726511211153758[80] = 0;
   out_3722726511211153758[81] = 0;
   out_3722726511211153758[82] = 0;
   out_3722726511211153758[83] = 0;
   out_3722726511211153758[84] = 0;
   out_3722726511211153758[85] = 0;
   out_3722726511211153758[86] = 0;
   out_3722726511211153758[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3722726511211153758[88] = 1;
   out_3722726511211153758[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3722726511211153758[90] = 0;
   out_3722726511211153758[91] = 0;
   out_3722726511211153758[92] = 0;
   out_3722726511211153758[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3722726511211153758[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3722726511211153758[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3722726511211153758[96] = 0;
   out_3722726511211153758[97] = 0;
   out_3722726511211153758[98] = 0;
   out_3722726511211153758[99] = 0;
   out_3722726511211153758[100] = 0;
   out_3722726511211153758[101] = 0;
   out_3722726511211153758[102] = 0;
   out_3722726511211153758[103] = 0;
   out_3722726511211153758[104] = 0;
   out_3722726511211153758[105] = 0;
   out_3722726511211153758[106] = 0;
   out_3722726511211153758[107] = 0;
   out_3722726511211153758[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3722726511211153758[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3722726511211153758[110] = 1;
   out_3722726511211153758[111] = 0;
   out_3722726511211153758[112] = 0;
   out_3722726511211153758[113] = 0;
   out_3722726511211153758[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3722726511211153758[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3722726511211153758[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3722726511211153758[117] = 0;
   out_3722726511211153758[118] = 0;
   out_3722726511211153758[119] = 0;
   out_3722726511211153758[120] = 0;
   out_3722726511211153758[121] = 0;
   out_3722726511211153758[122] = 0;
   out_3722726511211153758[123] = 0;
   out_3722726511211153758[124] = 0;
   out_3722726511211153758[125] = 0;
   out_3722726511211153758[126] = 0;
   out_3722726511211153758[127] = 0;
   out_3722726511211153758[128] = 0;
   out_3722726511211153758[129] = 0;
   out_3722726511211153758[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3722726511211153758[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3722726511211153758[132] = 1;
   out_3722726511211153758[133] = 0;
   out_3722726511211153758[134] = 0;
   out_3722726511211153758[135] = 0;
   out_3722726511211153758[136] = 0;
   out_3722726511211153758[137] = 0;
   out_3722726511211153758[138] = 0;
   out_3722726511211153758[139] = 0;
   out_3722726511211153758[140] = 0;
   out_3722726511211153758[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3722726511211153758[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3722726511211153758[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3722726511211153758[144] = 0;
   out_3722726511211153758[145] = 0;
   out_3722726511211153758[146] = 0;
   out_3722726511211153758[147] = 0;
   out_3722726511211153758[148] = 0;
   out_3722726511211153758[149] = 0;
   out_3722726511211153758[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3722726511211153758[151] = 0;
   out_3722726511211153758[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3722726511211153758[153] = 0;
   out_3722726511211153758[154] = 1;
   out_3722726511211153758[155] = 0;
   out_3722726511211153758[156] = 0;
   out_3722726511211153758[157] = 0;
   out_3722726511211153758[158] = 0;
   out_3722726511211153758[159] = 0;
   out_3722726511211153758[160] = 0;
   out_3722726511211153758[161] = 0;
   out_3722726511211153758[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3722726511211153758[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3722726511211153758[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3722726511211153758[165] = 0;
   out_3722726511211153758[166] = 0;
   out_3722726511211153758[167] = 0;
   out_3722726511211153758[168] = 0;
   out_3722726511211153758[169] = 0;
   out_3722726511211153758[170] = 0;
   out_3722726511211153758[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3722726511211153758[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3722726511211153758[173] = 0;
   out_3722726511211153758[174] = 0;
   out_3722726511211153758[175] = 0;
   out_3722726511211153758[176] = 1;
   out_3722726511211153758[177] = 0;
   out_3722726511211153758[178] = 0;
   out_3722726511211153758[179] = 0;
   out_3722726511211153758[180] = 0;
   out_3722726511211153758[181] = 0;
   out_3722726511211153758[182] = 0;
   out_3722726511211153758[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3722726511211153758[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3722726511211153758[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3722726511211153758[186] = 0;
   out_3722726511211153758[187] = 0;
   out_3722726511211153758[188] = 0;
   out_3722726511211153758[189] = 0;
   out_3722726511211153758[190] = 0;
   out_3722726511211153758[191] = 0;
   out_3722726511211153758[192] = 0;
   out_3722726511211153758[193] = 0;
   out_3722726511211153758[194] = 0;
   out_3722726511211153758[195] = 0;
   out_3722726511211153758[196] = 0;
   out_3722726511211153758[197] = 0;
   out_3722726511211153758[198] = 1;
   out_3722726511211153758[199] = 0;
   out_3722726511211153758[200] = 0;
   out_3722726511211153758[201] = 0;
   out_3722726511211153758[202] = 0;
   out_3722726511211153758[203] = 0;
   out_3722726511211153758[204] = 0;
   out_3722726511211153758[205] = 0;
   out_3722726511211153758[206] = 0;
   out_3722726511211153758[207] = 0;
   out_3722726511211153758[208] = 0;
   out_3722726511211153758[209] = 0;
   out_3722726511211153758[210] = 0;
   out_3722726511211153758[211] = 0;
   out_3722726511211153758[212] = 0;
   out_3722726511211153758[213] = 0;
   out_3722726511211153758[214] = 0;
   out_3722726511211153758[215] = 0;
   out_3722726511211153758[216] = 0;
   out_3722726511211153758[217] = 0;
   out_3722726511211153758[218] = 0;
   out_3722726511211153758[219] = 0;
   out_3722726511211153758[220] = 1;
   out_3722726511211153758[221] = 0;
   out_3722726511211153758[222] = 0;
   out_3722726511211153758[223] = 0;
   out_3722726511211153758[224] = 0;
   out_3722726511211153758[225] = 0;
   out_3722726511211153758[226] = 0;
   out_3722726511211153758[227] = 0;
   out_3722726511211153758[228] = 0;
   out_3722726511211153758[229] = 0;
   out_3722726511211153758[230] = 0;
   out_3722726511211153758[231] = 0;
   out_3722726511211153758[232] = 0;
   out_3722726511211153758[233] = 0;
   out_3722726511211153758[234] = 0;
   out_3722726511211153758[235] = 0;
   out_3722726511211153758[236] = 0;
   out_3722726511211153758[237] = 0;
   out_3722726511211153758[238] = 0;
   out_3722726511211153758[239] = 0;
   out_3722726511211153758[240] = 0;
   out_3722726511211153758[241] = 0;
   out_3722726511211153758[242] = 1;
   out_3722726511211153758[243] = 0;
   out_3722726511211153758[244] = 0;
   out_3722726511211153758[245] = 0;
   out_3722726511211153758[246] = 0;
   out_3722726511211153758[247] = 0;
   out_3722726511211153758[248] = 0;
   out_3722726511211153758[249] = 0;
   out_3722726511211153758[250] = 0;
   out_3722726511211153758[251] = 0;
   out_3722726511211153758[252] = 0;
   out_3722726511211153758[253] = 0;
   out_3722726511211153758[254] = 0;
   out_3722726511211153758[255] = 0;
   out_3722726511211153758[256] = 0;
   out_3722726511211153758[257] = 0;
   out_3722726511211153758[258] = 0;
   out_3722726511211153758[259] = 0;
   out_3722726511211153758[260] = 0;
   out_3722726511211153758[261] = 0;
   out_3722726511211153758[262] = 0;
   out_3722726511211153758[263] = 0;
   out_3722726511211153758[264] = 1;
   out_3722726511211153758[265] = 0;
   out_3722726511211153758[266] = 0;
   out_3722726511211153758[267] = 0;
   out_3722726511211153758[268] = 0;
   out_3722726511211153758[269] = 0;
   out_3722726511211153758[270] = 0;
   out_3722726511211153758[271] = 0;
   out_3722726511211153758[272] = 0;
   out_3722726511211153758[273] = 0;
   out_3722726511211153758[274] = 0;
   out_3722726511211153758[275] = 0;
   out_3722726511211153758[276] = 0;
   out_3722726511211153758[277] = 0;
   out_3722726511211153758[278] = 0;
   out_3722726511211153758[279] = 0;
   out_3722726511211153758[280] = 0;
   out_3722726511211153758[281] = 0;
   out_3722726511211153758[282] = 0;
   out_3722726511211153758[283] = 0;
   out_3722726511211153758[284] = 0;
   out_3722726511211153758[285] = 0;
   out_3722726511211153758[286] = 1;
   out_3722726511211153758[287] = 0;
   out_3722726511211153758[288] = 0;
   out_3722726511211153758[289] = 0;
   out_3722726511211153758[290] = 0;
   out_3722726511211153758[291] = 0;
   out_3722726511211153758[292] = 0;
   out_3722726511211153758[293] = 0;
   out_3722726511211153758[294] = 0;
   out_3722726511211153758[295] = 0;
   out_3722726511211153758[296] = 0;
   out_3722726511211153758[297] = 0;
   out_3722726511211153758[298] = 0;
   out_3722726511211153758[299] = 0;
   out_3722726511211153758[300] = 0;
   out_3722726511211153758[301] = 0;
   out_3722726511211153758[302] = 0;
   out_3722726511211153758[303] = 0;
   out_3722726511211153758[304] = 0;
   out_3722726511211153758[305] = 0;
   out_3722726511211153758[306] = 0;
   out_3722726511211153758[307] = 0;
   out_3722726511211153758[308] = 1;
   out_3722726511211153758[309] = 0;
   out_3722726511211153758[310] = 0;
   out_3722726511211153758[311] = 0;
   out_3722726511211153758[312] = 0;
   out_3722726511211153758[313] = 0;
   out_3722726511211153758[314] = 0;
   out_3722726511211153758[315] = 0;
   out_3722726511211153758[316] = 0;
   out_3722726511211153758[317] = 0;
   out_3722726511211153758[318] = 0;
   out_3722726511211153758[319] = 0;
   out_3722726511211153758[320] = 0;
   out_3722726511211153758[321] = 0;
   out_3722726511211153758[322] = 0;
   out_3722726511211153758[323] = 0;
   out_3722726511211153758[324] = 0;
   out_3722726511211153758[325] = 0;
   out_3722726511211153758[326] = 0;
   out_3722726511211153758[327] = 0;
   out_3722726511211153758[328] = 0;
   out_3722726511211153758[329] = 0;
   out_3722726511211153758[330] = 1;
   out_3722726511211153758[331] = 0;
   out_3722726511211153758[332] = 0;
   out_3722726511211153758[333] = 0;
   out_3722726511211153758[334] = 0;
   out_3722726511211153758[335] = 0;
   out_3722726511211153758[336] = 0;
   out_3722726511211153758[337] = 0;
   out_3722726511211153758[338] = 0;
   out_3722726511211153758[339] = 0;
   out_3722726511211153758[340] = 0;
   out_3722726511211153758[341] = 0;
   out_3722726511211153758[342] = 0;
   out_3722726511211153758[343] = 0;
   out_3722726511211153758[344] = 0;
   out_3722726511211153758[345] = 0;
   out_3722726511211153758[346] = 0;
   out_3722726511211153758[347] = 0;
   out_3722726511211153758[348] = 0;
   out_3722726511211153758[349] = 0;
   out_3722726511211153758[350] = 0;
   out_3722726511211153758[351] = 0;
   out_3722726511211153758[352] = 1;
   out_3722726511211153758[353] = 0;
   out_3722726511211153758[354] = 0;
   out_3722726511211153758[355] = 0;
   out_3722726511211153758[356] = 0;
   out_3722726511211153758[357] = 0;
   out_3722726511211153758[358] = 0;
   out_3722726511211153758[359] = 0;
   out_3722726511211153758[360] = 0;
   out_3722726511211153758[361] = 0;
   out_3722726511211153758[362] = 0;
   out_3722726511211153758[363] = 0;
   out_3722726511211153758[364] = 0;
   out_3722726511211153758[365] = 0;
   out_3722726511211153758[366] = 0;
   out_3722726511211153758[367] = 0;
   out_3722726511211153758[368] = 0;
   out_3722726511211153758[369] = 0;
   out_3722726511211153758[370] = 0;
   out_3722726511211153758[371] = 0;
   out_3722726511211153758[372] = 0;
   out_3722726511211153758[373] = 0;
   out_3722726511211153758[374] = 1;
   out_3722726511211153758[375] = 0;
   out_3722726511211153758[376] = 0;
   out_3722726511211153758[377] = 0;
   out_3722726511211153758[378] = 0;
   out_3722726511211153758[379] = 0;
   out_3722726511211153758[380] = 0;
   out_3722726511211153758[381] = 0;
   out_3722726511211153758[382] = 0;
   out_3722726511211153758[383] = 0;
   out_3722726511211153758[384] = 0;
   out_3722726511211153758[385] = 0;
   out_3722726511211153758[386] = 0;
   out_3722726511211153758[387] = 0;
   out_3722726511211153758[388] = 0;
   out_3722726511211153758[389] = 0;
   out_3722726511211153758[390] = 0;
   out_3722726511211153758[391] = 0;
   out_3722726511211153758[392] = 0;
   out_3722726511211153758[393] = 0;
   out_3722726511211153758[394] = 0;
   out_3722726511211153758[395] = 0;
   out_3722726511211153758[396] = 1;
   out_3722726511211153758[397] = 0;
   out_3722726511211153758[398] = 0;
   out_3722726511211153758[399] = 0;
   out_3722726511211153758[400] = 0;
   out_3722726511211153758[401] = 0;
   out_3722726511211153758[402] = 0;
   out_3722726511211153758[403] = 0;
   out_3722726511211153758[404] = 0;
   out_3722726511211153758[405] = 0;
   out_3722726511211153758[406] = 0;
   out_3722726511211153758[407] = 0;
   out_3722726511211153758[408] = 0;
   out_3722726511211153758[409] = 0;
   out_3722726511211153758[410] = 0;
   out_3722726511211153758[411] = 0;
   out_3722726511211153758[412] = 0;
   out_3722726511211153758[413] = 0;
   out_3722726511211153758[414] = 0;
   out_3722726511211153758[415] = 0;
   out_3722726511211153758[416] = 0;
   out_3722726511211153758[417] = 0;
   out_3722726511211153758[418] = 1;
   out_3722726511211153758[419] = 0;
   out_3722726511211153758[420] = 0;
   out_3722726511211153758[421] = 0;
   out_3722726511211153758[422] = 0;
   out_3722726511211153758[423] = 0;
   out_3722726511211153758[424] = 0;
   out_3722726511211153758[425] = 0;
   out_3722726511211153758[426] = 0;
   out_3722726511211153758[427] = 0;
   out_3722726511211153758[428] = 0;
   out_3722726511211153758[429] = 0;
   out_3722726511211153758[430] = 0;
   out_3722726511211153758[431] = 0;
   out_3722726511211153758[432] = 0;
   out_3722726511211153758[433] = 0;
   out_3722726511211153758[434] = 0;
   out_3722726511211153758[435] = 0;
   out_3722726511211153758[436] = 0;
   out_3722726511211153758[437] = 0;
   out_3722726511211153758[438] = 0;
   out_3722726511211153758[439] = 0;
   out_3722726511211153758[440] = 1;
}
void h_4(double *state, double *unused, double *out_5976239961768354351) {
   out_5976239961768354351[0] = state[10] + state[13];
   out_5976239961768354351[1] = state[11] + state[14];
   out_5976239961768354351[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1122121832531392526) {
   out_1122121832531392526[0] = 0;
   out_1122121832531392526[1] = 0;
   out_1122121832531392526[2] = 0;
   out_1122121832531392526[3] = 0;
   out_1122121832531392526[4] = 0;
   out_1122121832531392526[5] = 0;
   out_1122121832531392526[6] = 0;
   out_1122121832531392526[7] = 0;
   out_1122121832531392526[8] = 0;
   out_1122121832531392526[9] = 0;
   out_1122121832531392526[10] = 1;
   out_1122121832531392526[11] = 0;
   out_1122121832531392526[12] = 0;
   out_1122121832531392526[13] = 1;
   out_1122121832531392526[14] = 0;
   out_1122121832531392526[15] = 0;
   out_1122121832531392526[16] = 0;
   out_1122121832531392526[17] = 0;
   out_1122121832531392526[18] = 0;
   out_1122121832531392526[19] = 0;
   out_1122121832531392526[20] = 0;
   out_1122121832531392526[21] = 0;
   out_1122121832531392526[22] = 0;
   out_1122121832531392526[23] = 0;
   out_1122121832531392526[24] = 0;
   out_1122121832531392526[25] = 0;
   out_1122121832531392526[26] = 0;
   out_1122121832531392526[27] = 0;
   out_1122121832531392526[28] = 0;
   out_1122121832531392526[29] = 0;
   out_1122121832531392526[30] = 0;
   out_1122121832531392526[31] = 0;
   out_1122121832531392526[32] = 0;
   out_1122121832531392526[33] = 1;
   out_1122121832531392526[34] = 0;
   out_1122121832531392526[35] = 0;
   out_1122121832531392526[36] = 1;
   out_1122121832531392526[37] = 0;
   out_1122121832531392526[38] = 0;
   out_1122121832531392526[39] = 0;
   out_1122121832531392526[40] = 0;
   out_1122121832531392526[41] = 0;
   out_1122121832531392526[42] = 0;
   out_1122121832531392526[43] = 0;
   out_1122121832531392526[44] = 0;
   out_1122121832531392526[45] = 0;
   out_1122121832531392526[46] = 0;
   out_1122121832531392526[47] = 0;
   out_1122121832531392526[48] = 0;
   out_1122121832531392526[49] = 0;
   out_1122121832531392526[50] = 0;
   out_1122121832531392526[51] = 0;
   out_1122121832531392526[52] = 0;
   out_1122121832531392526[53] = 0;
   out_1122121832531392526[54] = 0;
   out_1122121832531392526[55] = 0;
   out_1122121832531392526[56] = 1;
   out_1122121832531392526[57] = 0;
   out_1122121832531392526[58] = 0;
   out_1122121832531392526[59] = 1;
   out_1122121832531392526[60] = 0;
   out_1122121832531392526[61] = 0;
   out_1122121832531392526[62] = 0;
   out_1122121832531392526[63] = 0;
   out_1122121832531392526[64] = 0;
   out_1122121832531392526[65] = 0;
}
void h_9(double *state, double *unused, double *out_1712402462391807216) {
   out_1712402462391807216[0] = state[10];
   out_1712402462391807216[1] = state[11];
   out_1712402462391807216[2] = state[12];
}
void H_9(double *state, double *unused, double *out_880932185901801881) {
   out_880932185901801881[0] = 0;
   out_880932185901801881[1] = 0;
   out_880932185901801881[2] = 0;
   out_880932185901801881[3] = 0;
   out_880932185901801881[4] = 0;
   out_880932185901801881[5] = 0;
   out_880932185901801881[6] = 0;
   out_880932185901801881[7] = 0;
   out_880932185901801881[8] = 0;
   out_880932185901801881[9] = 0;
   out_880932185901801881[10] = 1;
   out_880932185901801881[11] = 0;
   out_880932185901801881[12] = 0;
   out_880932185901801881[13] = 0;
   out_880932185901801881[14] = 0;
   out_880932185901801881[15] = 0;
   out_880932185901801881[16] = 0;
   out_880932185901801881[17] = 0;
   out_880932185901801881[18] = 0;
   out_880932185901801881[19] = 0;
   out_880932185901801881[20] = 0;
   out_880932185901801881[21] = 0;
   out_880932185901801881[22] = 0;
   out_880932185901801881[23] = 0;
   out_880932185901801881[24] = 0;
   out_880932185901801881[25] = 0;
   out_880932185901801881[26] = 0;
   out_880932185901801881[27] = 0;
   out_880932185901801881[28] = 0;
   out_880932185901801881[29] = 0;
   out_880932185901801881[30] = 0;
   out_880932185901801881[31] = 0;
   out_880932185901801881[32] = 0;
   out_880932185901801881[33] = 1;
   out_880932185901801881[34] = 0;
   out_880932185901801881[35] = 0;
   out_880932185901801881[36] = 0;
   out_880932185901801881[37] = 0;
   out_880932185901801881[38] = 0;
   out_880932185901801881[39] = 0;
   out_880932185901801881[40] = 0;
   out_880932185901801881[41] = 0;
   out_880932185901801881[42] = 0;
   out_880932185901801881[43] = 0;
   out_880932185901801881[44] = 0;
   out_880932185901801881[45] = 0;
   out_880932185901801881[46] = 0;
   out_880932185901801881[47] = 0;
   out_880932185901801881[48] = 0;
   out_880932185901801881[49] = 0;
   out_880932185901801881[50] = 0;
   out_880932185901801881[51] = 0;
   out_880932185901801881[52] = 0;
   out_880932185901801881[53] = 0;
   out_880932185901801881[54] = 0;
   out_880932185901801881[55] = 0;
   out_880932185901801881[56] = 1;
   out_880932185901801881[57] = 0;
   out_880932185901801881[58] = 0;
   out_880932185901801881[59] = 0;
   out_880932185901801881[60] = 0;
   out_880932185901801881[61] = 0;
   out_880932185901801881[62] = 0;
   out_880932185901801881[63] = 0;
   out_880932185901801881[64] = 0;
   out_880932185901801881[65] = 0;
}
void h_10(double *state, double *unused, double *out_6207543687465342535) {
   out_6207543687465342535[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6207543687465342535[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6207543687465342535[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1776259619404371354) {
   out_1776259619404371354[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1776259619404371354[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1776259619404371354[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1776259619404371354[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1776259619404371354[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1776259619404371354[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1776259619404371354[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1776259619404371354[7] = 0;
   out_1776259619404371354[8] = 0;
   out_1776259619404371354[9] = 0;
   out_1776259619404371354[10] = 0;
   out_1776259619404371354[11] = 0;
   out_1776259619404371354[12] = 0;
   out_1776259619404371354[13] = 0;
   out_1776259619404371354[14] = 0;
   out_1776259619404371354[15] = 0;
   out_1776259619404371354[16] = 1;
   out_1776259619404371354[17] = 0;
   out_1776259619404371354[18] = 0;
   out_1776259619404371354[19] = 1;
   out_1776259619404371354[20] = 0;
   out_1776259619404371354[21] = 0;
   out_1776259619404371354[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1776259619404371354[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1776259619404371354[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1776259619404371354[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1776259619404371354[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1776259619404371354[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1776259619404371354[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1776259619404371354[29] = 0;
   out_1776259619404371354[30] = 0;
   out_1776259619404371354[31] = 0;
   out_1776259619404371354[32] = 0;
   out_1776259619404371354[33] = 0;
   out_1776259619404371354[34] = 0;
   out_1776259619404371354[35] = 0;
   out_1776259619404371354[36] = 0;
   out_1776259619404371354[37] = 0;
   out_1776259619404371354[38] = 0;
   out_1776259619404371354[39] = 1;
   out_1776259619404371354[40] = 0;
   out_1776259619404371354[41] = 0;
   out_1776259619404371354[42] = 1;
   out_1776259619404371354[43] = 0;
   out_1776259619404371354[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1776259619404371354[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1776259619404371354[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1776259619404371354[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1776259619404371354[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1776259619404371354[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1776259619404371354[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1776259619404371354[51] = 0;
   out_1776259619404371354[52] = 0;
   out_1776259619404371354[53] = 0;
   out_1776259619404371354[54] = 0;
   out_1776259619404371354[55] = 0;
   out_1776259619404371354[56] = 0;
   out_1776259619404371354[57] = 0;
   out_1776259619404371354[58] = 0;
   out_1776259619404371354[59] = 0;
   out_1776259619404371354[60] = 0;
   out_1776259619404371354[61] = 0;
   out_1776259619404371354[62] = 1;
   out_1776259619404371354[63] = 0;
   out_1776259619404371354[64] = 0;
   out_1776259619404371354[65] = 1;
}
void h_12(double *state, double *unused, double *out_707597690636180498) {
   out_707597690636180498[0] = state[0];
   out_707597690636180498[1] = state[1];
   out_707597690636180498[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3897334575500569269) {
   out_3897334575500569269[0] = 1;
   out_3897334575500569269[1] = 0;
   out_3897334575500569269[2] = 0;
   out_3897334575500569269[3] = 0;
   out_3897334575500569269[4] = 0;
   out_3897334575500569269[5] = 0;
   out_3897334575500569269[6] = 0;
   out_3897334575500569269[7] = 0;
   out_3897334575500569269[8] = 0;
   out_3897334575500569269[9] = 0;
   out_3897334575500569269[10] = 0;
   out_3897334575500569269[11] = 0;
   out_3897334575500569269[12] = 0;
   out_3897334575500569269[13] = 0;
   out_3897334575500569269[14] = 0;
   out_3897334575500569269[15] = 0;
   out_3897334575500569269[16] = 0;
   out_3897334575500569269[17] = 0;
   out_3897334575500569269[18] = 0;
   out_3897334575500569269[19] = 0;
   out_3897334575500569269[20] = 0;
   out_3897334575500569269[21] = 0;
   out_3897334575500569269[22] = 0;
   out_3897334575500569269[23] = 1;
   out_3897334575500569269[24] = 0;
   out_3897334575500569269[25] = 0;
   out_3897334575500569269[26] = 0;
   out_3897334575500569269[27] = 0;
   out_3897334575500569269[28] = 0;
   out_3897334575500569269[29] = 0;
   out_3897334575500569269[30] = 0;
   out_3897334575500569269[31] = 0;
   out_3897334575500569269[32] = 0;
   out_3897334575500569269[33] = 0;
   out_3897334575500569269[34] = 0;
   out_3897334575500569269[35] = 0;
   out_3897334575500569269[36] = 0;
   out_3897334575500569269[37] = 0;
   out_3897334575500569269[38] = 0;
   out_3897334575500569269[39] = 0;
   out_3897334575500569269[40] = 0;
   out_3897334575500569269[41] = 0;
   out_3897334575500569269[42] = 0;
   out_3897334575500569269[43] = 0;
   out_3897334575500569269[44] = 0;
   out_3897334575500569269[45] = 0;
   out_3897334575500569269[46] = 1;
   out_3897334575500569269[47] = 0;
   out_3897334575500569269[48] = 0;
   out_3897334575500569269[49] = 0;
   out_3897334575500569269[50] = 0;
   out_3897334575500569269[51] = 0;
   out_3897334575500569269[52] = 0;
   out_3897334575500569269[53] = 0;
   out_3897334575500569269[54] = 0;
   out_3897334575500569269[55] = 0;
   out_3897334575500569269[56] = 0;
   out_3897334575500569269[57] = 0;
   out_3897334575500569269[58] = 0;
   out_3897334575500569269[59] = 0;
   out_3897334575500569269[60] = 0;
   out_3897334575500569269[61] = 0;
   out_3897334575500569269[62] = 0;
   out_3897334575500569269[63] = 0;
   out_3897334575500569269[64] = 0;
   out_3897334575500569269[65] = 0;
}
void h_31(double *state, double *unused, double *out_8774465680980263829) {
   out_8774465680980263829[0] = state[7];
   out_8774465680980263829[1] = state[8];
   out_8774465680980263829[2] = state[9];
}
void H_31(double *state, double *unused, double *out_6642897607825582978) {
   out_6642897607825582978[0] = 0;
   out_6642897607825582978[1] = 0;
   out_6642897607825582978[2] = 0;
   out_6642897607825582978[3] = 0;
   out_6642897607825582978[4] = 0;
   out_6642897607825582978[5] = 0;
   out_6642897607825582978[6] = 0;
   out_6642897607825582978[7] = 1;
   out_6642897607825582978[8] = 0;
   out_6642897607825582978[9] = 0;
   out_6642897607825582978[10] = 0;
   out_6642897607825582978[11] = 0;
   out_6642897607825582978[12] = 0;
   out_6642897607825582978[13] = 0;
   out_6642897607825582978[14] = 0;
   out_6642897607825582978[15] = 0;
   out_6642897607825582978[16] = 0;
   out_6642897607825582978[17] = 0;
   out_6642897607825582978[18] = 0;
   out_6642897607825582978[19] = 0;
   out_6642897607825582978[20] = 0;
   out_6642897607825582978[21] = 0;
   out_6642897607825582978[22] = 0;
   out_6642897607825582978[23] = 0;
   out_6642897607825582978[24] = 0;
   out_6642897607825582978[25] = 0;
   out_6642897607825582978[26] = 0;
   out_6642897607825582978[27] = 0;
   out_6642897607825582978[28] = 0;
   out_6642897607825582978[29] = 0;
   out_6642897607825582978[30] = 1;
   out_6642897607825582978[31] = 0;
   out_6642897607825582978[32] = 0;
   out_6642897607825582978[33] = 0;
   out_6642897607825582978[34] = 0;
   out_6642897607825582978[35] = 0;
   out_6642897607825582978[36] = 0;
   out_6642897607825582978[37] = 0;
   out_6642897607825582978[38] = 0;
   out_6642897607825582978[39] = 0;
   out_6642897607825582978[40] = 0;
   out_6642897607825582978[41] = 0;
   out_6642897607825582978[42] = 0;
   out_6642897607825582978[43] = 0;
   out_6642897607825582978[44] = 0;
   out_6642897607825582978[45] = 0;
   out_6642897607825582978[46] = 0;
   out_6642897607825582978[47] = 0;
   out_6642897607825582978[48] = 0;
   out_6642897607825582978[49] = 0;
   out_6642897607825582978[50] = 0;
   out_6642897607825582978[51] = 0;
   out_6642897607825582978[52] = 0;
   out_6642897607825582978[53] = 1;
   out_6642897607825582978[54] = 0;
   out_6642897607825582978[55] = 0;
   out_6642897607825582978[56] = 0;
   out_6642897607825582978[57] = 0;
   out_6642897607825582978[58] = 0;
   out_6642897607825582978[59] = 0;
   out_6642897607825582978[60] = 0;
   out_6642897607825582978[61] = 0;
   out_6642897607825582978[62] = 0;
   out_6642897607825582978[63] = 0;
   out_6642897607825582978[64] = 0;
   out_6642897607825582978[65] = 0;
}
void h_32(double *state, double *unused, double *out_6387039080365586005) {
   out_6387039080365586005[0] = state[3];
   out_6387039080365586005[1] = state[4];
   out_6387039080365586005[2] = state[5];
   out_6387039080365586005[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4998058098114683376) {
   out_4998058098114683376[0] = 0;
   out_4998058098114683376[1] = 0;
   out_4998058098114683376[2] = 0;
   out_4998058098114683376[3] = 1;
   out_4998058098114683376[4] = 0;
   out_4998058098114683376[5] = 0;
   out_4998058098114683376[6] = 0;
   out_4998058098114683376[7] = 0;
   out_4998058098114683376[8] = 0;
   out_4998058098114683376[9] = 0;
   out_4998058098114683376[10] = 0;
   out_4998058098114683376[11] = 0;
   out_4998058098114683376[12] = 0;
   out_4998058098114683376[13] = 0;
   out_4998058098114683376[14] = 0;
   out_4998058098114683376[15] = 0;
   out_4998058098114683376[16] = 0;
   out_4998058098114683376[17] = 0;
   out_4998058098114683376[18] = 0;
   out_4998058098114683376[19] = 0;
   out_4998058098114683376[20] = 0;
   out_4998058098114683376[21] = 0;
   out_4998058098114683376[22] = 0;
   out_4998058098114683376[23] = 0;
   out_4998058098114683376[24] = 0;
   out_4998058098114683376[25] = 0;
   out_4998058098114683376[26] = 1;
   out_4998058098114683376[27] = 0;
   out_4998058098114683376[28] = 0;
   out_4998058098114683376[29] = 0;
   out_4998058098114683376[30] = 0;
   out_4998058098114683376[31] = 0;
   out_4998058098114683376[32] = 0;
   out_4998058098114683376[33] = 0;
   out_4998058098114683376[34] = 0;
   out_4998058098114683376[35] = 0;
   out_4998058098114683376[36] = 0;
   out_4998058098114683376[37] = 0;
   out_4998058098114683376[38] = 0;
   out_4998058098114683376[39] = 0;
   out_4998058098114683376[40] = 0;
   out_4998058098114683376[41] = 0;
   out_4998058098114683376[42] = 0;
   out_4998058098114683376[43] = 0;
   out_4998058098114683376[44] = 0;
   out_4998058098114683376[45] = 0;
   out_4998058098114683376[46] = 0;
   out_4998058098114683376[47] = 0;
   out_4998058098114683376[48] = 0;
   out_4998058098114683376[49] = 1;
   out_4998058098114683376[50] = 0;
   out_4998058098114683376[51] = 0;
   out_4998058098114683376[52] = 0;
   out_4998058098114683376[53] = 0;
   out_4998058098114683376[54] = 0;
   out_4998058098114683376[55] = 0;
   out_4998058098114683376[56] = 0;
   out_4998058098114683376[57] = 0;
   out_4998058098114683376[58] = 0;
   out_4998058098114683376[59] = 0;
   out_4998058098114683376[60] = 0;
   out_4998058098114683376[61] = 0;
   out_4998058098114683376[62] = 0;
   out_4998058098114683376[63] = 0;
   out_4998058098114683376[64] = 0;
   out_4998058098114683376[65] = 0;
   out_4998058098114683376[66] = 0;
   out_4998058098114683376[67] = 0;
   out_4998058098114683376[68] = 0;
   out_4998058098114683376[69] = 0;
   out_4998058098114683376[70] = 0;
   out_4998058098114683376[71] = 0;
   out_4998058098114683376[72] = 1;
   out_4998058098114683376[73] = 0;
   out_4998058098114683376[74] = 0;
   out_4998058098114683376[75] = 0;
   out_4998058098114683376[76] = 0;
   out_4998058098114683376[77] = 0;
   out_4998058098114683376[78] = 0;
   out_4998058098114683376[79] = 0;
   out_4998058098114683376[80] = 0;
   out_4998058098114683376[81] = 0;
   out_4998058098114683376[82] = 0;
   out_4998058098114683376[83] = 0;
   out_4998058098114683376[84] = 0;
   out_4998058098114683376[85] = 0;
   out_4998058098114683376[86] = 0;
   out_4998058098114683376[87] = 0;
}
void h_13(double *state, double *unused, double *out_2725471883186757127) {
   out_2725471883186757127[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2725471883186757127[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2725471883186757127[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5593973629908948762) {
   out_5593973629908948762[0] = 0;
   out_5593973629908948762[1] = 0;
   out_5593973629908948762[2] = 0;
   out_5593973629908948762[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5593973629908948762[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5593973629908948762[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5593973629908948762[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5593973629908948762[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5593973629908948762[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5593973629908948762[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5593973629908948762[10] = 0;
   out_5593973629908948762[11] = 0;
   out_5593973629908948762[12] = 0;
   out_5593973629908948762[13] = 0;
   out_5593973629908948762[14] = 0;
   out_5593973629908948762[15] = 0;
   out_5593973629908948762[16] = 0;
   out_5593973629908948762[17] = 0;
   out_5593973629908948762[18] = 0;
   out_5593973629908948762[19] = 0;
   out_5593973629908948762[20] = 0;
   out_5593973629908948762[21] = 0;
   out_5593973629908948762[22] = 0;
   out_5593973629908948762[23] = 0;
   out_5593973629908948762[24] = 0;
   out_5593973629908948762[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5593973629908948762[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5593973629908948762[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5593973629908948762[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5593973629908948762[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5593973629908948762[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5593973629908948762[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5593973629908948762[32] = 0;
   out_5593973629908948762[33] = 0;
   out_5593973629908948762[34] = 0;
   out_5593973629908948762[35] = 0;
   out_5593973629908948762[36] = 0;
   out_5593973629908948762[37] = 0;
   out_5593973629908948762[38] = 0;
   out_5593973629908948762[39] = 0;
   out_5593973629908948762[40] = 0;
   out_5593973629908948762[41] = 0;
   out_5593973629908948762[42] = 0;
   out_5593973629908948762[43] = 0;
   out_5593973629908948762[44] = 0;
   out_5593973629908948762[45] = 0;
   out_5593973629908948762[46] = 0;
   out_5593973629908948762[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5593973629908948762[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5593973629908948762[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5593973629908948762[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5593973629908948762[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5593973629908948762[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5593973629908948762[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5593973629908948762[54] = 0;
   out_5593973629908948762[55] = 0;
   out_5593973629908948762[56] = 0;
   out_5593973629908948762[57] = 0;
   out_5593973629908948762[58] = 0;
   out_5593973629908948762[59] = 0;
   out_5593973629908948762[60] = 0;
   out_5593973629908948762[61] = 0;
   out_5593973629908948762[62] = 0;
   out_5593973629908948762[63] = 0;
   out_5593973629908948762[64] = 0;
   out_5593973629908948762[65] = 0;
}
void h_14(double *state, double *unused, double *out_1712402462391807216) {
   out_1712402462391807216[0] = state[10];
   out_1712402462391807216[1] = state[11];
   out_1712402462391807216[2] = state[12];
}
void H_14(double *state, double *unused, double *out_880932185901801881) {
   out_880932185901801881[0] = 0;
   out_880932185901801881[1] = 0;
   out_880932185901801881[2] = 0;
   out_880932185901801881[3] = 0;
   out_880932185901801881[4] = 0;
   out_880932185901801881[5] = 0;
   out_880932185901801881[6] = 0;
   out_880932185901801881[7] = 0;
   out_880932185901801881[8] = 0;
   out_880932185901801881[9] = 0;
   out_880932185901801881[10] = 1;
   out_880932185901801881[11] = 0;
   out_880932185901801881[12] = 0;
   out_880932185901801881[13] = 0;
   out_880932185901801881[14] = 0;
   out_880932185901801881[15] = 0;
   out_880932185901801881[16] = 0;
   out_880932185901801881[17] = 0;
   out_880932185901801881[18] = 0;
   out_880932185901801881[19] = 0;
   out_880932185901801881[20] = 0;
   out_880932185901801881[21] = 0;
   out_880932185901801881[22] = 0;
   out_880932185901801881[23] = 0;
   out_880932185901801881[24] = 0;
   out_880932185901801881[25] = 0;
   out_880932185901801881[26] = 0;
   out_880932185901801881[27] = 0;
   out_880932185901801881[28] = 0;
   out_880932185901801881[29] = 0;
   out_880932185901801881[30] = 0;
   out_880932185901801881[31] = 0;
   out_880932185901801881[32] = 0;
   out_880932185901801881[33] = 1;
   out_880932185901801881[34] = 0;
   out_880932185901801881[35] = 0;
   out_880932185901801881[36] = 0;
   out_880932185901801881[37] = 0;
   out_880932185901801881[38] = 0;
   out_880932185901801881[39] = 0;
   out_880932185901801881[40] = 0;
   out_880932185901801881[41] = 0;
   out_880932185901801881[42] = 0;
   out_880932185901801881[43] = 0;
   out_880932185901801881[44] = 0;
   out_880932185901801881[45] = 0;
   out_880932185901801881[46] = 0;
   out_880932185901801881[47] = 0;
   out_880932185901801881[48] = 0;
   out_880932185901801881[49] = 0;
   out_880932185901801881[50] = 0;
   out_880932185901801881[51] = 0;
   out_880932185901801881[52] = 0;
   out_880932185901801881[53] = 0;
   out_880932185901801881[54] = 0;
   out_880932185901801881[55] = 0;
   out_880932185901801881[56] = 1;
   out_880932185901801881[57] = 0;
   out_880932185901801881[58] = 0;
   out_880932185901801881[59] = 0;
   out_880932185901801881[60] = 0;
   out_880932185901801881[61] = 0;
   out_880932185901801881[62] = 0;
   out_880932185901801881[63] = 0;
   out_880932185901801881[64] = 0;
   out_880932185901801881[65] = 0;
}
void h_33(double *state, double *unused, double *out_207473313627453862) {
   out_207473313627453862[0] = state[16];
   out_207473313627453862[1] = state[17];
   out_207473313627453862[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8653289461245111034) {
   out_8653289461245111034[0] = 0;
   out_8653289461245111034[1] = 0;
   out_8653289461245111034[2] = 0;
   out_8653289461245111034[3] = 0;
   out_8653289461245111034[4] = 0;
   out_8653289461245111034[5] = 0;
   out_8653289461245111034[6] = 0;
   out_8653289461245111034[7] = 0;
   out_8653289461245111034[8] = 0;
   out_8653289461245111034[9] = 0;
   out_8653289461245111034[10] = 0;
   out_8653289461245111034[11] = 0;
   out_8653289461245111034[12] = 0;
   out_8653289461245111034[13] = 0;
   out_8653289461245111034[14] = 0;
   out_8653289461245111034[15] = 0;
   out_8653289461245111034[16] = 1;
   out_8653289461245111034[17] = 0;
   out_8653289461245111034[18] = 0;
   out_8653289461245111034[19] = 0;
   out_8653289461245111034[20] = 0;
   out_8653289461245111034[21] = 0;
   out_8653289461245111034[22] = 0;
   out_8653289461245111034[23] = 0;
   out_8653289461245111034[24] = 0;
   out_8653289461245111034[25] = 0;
   out_8653289461245111034[26] = 0;
   out_8653289461245111034[27] = 0;
   out_8653289461245111034[28] = 0;
   out_8653289461245111034[29] = 0;
   out_8653289461245111034[30] = 0;
   out_8653289461245111034[31] = 0;
   out_8653289461245111034[32] = 0;
   out_8653289461245111034[33] = 0;
   out_8653289461245111034[34] = 0;
   out_8653289461245111034[35] = 0;
   out_8653289461245111034[36] = 0;
   out_8653289461245111034[37] = 0;
   out_8653289461245111034[38] = 0;
   out_8653289461245111034[39] = 1;
   out_8653289461245111034[40] = 0;
   out_8653289461245111034[41] = 0;
   out_8653289461245111034[42] = 0;
   out_8653289461245111034[43] = 0;
   out_8653289461245111034[44] = 0;
   out_8653289461245111034[45] = 0;
   out_8653289461245111034[46] = 0;
   out_8653289461245111034[47] = 0;
   out_8653289461245111034[48] = 0;
   out_8653289461245111034[49] = 0;
   out_8653289461245111034[50] = 0;
   out_8653289461245111034[51] = 0;
   out_8653289461245111034[52] = 0;
   out_8653289461245111034[53] = 0;
   out_8653289461245111034[54] = 0;
   out_8653289461245111034[55] = 0;
   out_8653289461245111034[56] = 0;
   out_8653289461245111034[57] = 0;
   out_8653289461245111034[58] = 0;
   out_8653289461245111034[59] = 0;
   out_8653289461245111034[60] = 0;
   out_8653289461245111034[61] = 0;
   out_8653289461245111034[62] = 1;
   out_8653289461245111034[63] = 0;
   out_8653289461245111034[64] = 0;
   out_8653289461245111034[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4391333410375007465) {
  H(in_vec, out_4391333410375007465);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3940639469994771400) {
  err_fun(nom_x, delta_x, out_3940639469994771400);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1694960292761865224) {
  inv_err_fun(nom_x, true_x, out_1694960292761865224);
}
void live_H_mod_fun(double *state, double *out_42904283348084181) {
  H_mod_fun(state, out_42904283348084181);
}
void live_f_fun(double *state, double dt, double *out_7874582835499815417) {
  f_fun(state,  dt, out_7874582835499815417);
}
void live_F_fun(double *state, double dt, double *out_3722726511211153758) {
  F_fun(state,  dt, out_3722726511211153758);
}
void live_h_4(double *state, double *unused, double *out_5976239961768354351) {
  h_4(state, unused, out_5976239961768354351);
}
void live_H_4(double *state, double *unused, double *out_1122121832531392526) {
  H_4(state, unused, out_1122121832531392526);
}
void live_h_9(double *state, double *unused, double *out_1712402462391807216) {
  h_9(state, unused, out_1712402462391807216);
}
void live_H_9(double *state, double *unused, double *out_880932185901801881) {
  H_9(state, unused, out_880932185901801881);
}
void live_h_10(double *state, double *unused, double *out_6207543687465342535) {
  h_10(state, unused, out_6207543687465342535);
}
void live_H_10(double *state, double *unused, double *out_1776259619404371354) {
  H_10(state, unused, out_1776259619404371354);
}
void live_h_12(double *state, double *unused, double *out_707597690636180498) {
  h_12(state, unused, out_707597690636180498);
}
void live_H_12(double *state, double *unused, double *out_3897334575500569269) {
  H_12(state, unused, out_3897334575500569269);
}
void live_h_31(double *state, double *unused, double *out_8774465680980263829) {
  h_31(state, unused, out_8774465680980263829);
}
void live_H_31(double *state, double *unused, double *out_6642897607825582978) {
  H_31(state, unused, out_6642897607825582978);
}
void live_h_32(double *state, double *unused, double *out_6387039080365586005) {
  h_32(state, unused, out_6387039080365586005);
}
void live_H_32(double *state, double *unused, double *out_4998058098114683376) {
  H_32(state, unused, out_4998058098114683376);
}
void live_h_13(double *state, double *unused, double *out_2725471883186757127) {
  h_13(state, unused, out_2725471883186757127);
}
void live_H_13(double *state, double *unused, double *out_5593973629908948762) {
  H_13(state, unused, out_5593973629908948762);
}
void live_h_14(double *state, double *unused, double *out_1712402462391807216) {
  h_14(state, unused, out_1712402462391807216);
}
void live_H_14(double *state, double *unused, double *out_880932185901801881) {
  H_14(state, unused, out_880932185901801881);
}
void live_h_33(double *state, double *unused, double *out_207473313627453862) {
  h_33(state, unused, out_207473313627453862);
}
void live_H_33(double *state, double *unused, double *out_8653289461245111034) {
  H_33(state, unused, out_8653289461245111034);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
